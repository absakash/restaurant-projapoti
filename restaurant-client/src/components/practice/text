import React, { useState } from "react";
import toast from "react-hot-toast";
import { useQuery } from "react-query";

const Cart = () => {
  const [totalPrice, setTotalPrice] = useState(0);

  const { data: carts, isLoading, isError,refetch } = useQuery("cart", async () => {
    const response = await fetch("http://localhost:4000/cart");
    const data = await response.json();

    // Add a count property to each cart object with an initial value of 1
    const cartsWithCount = data.map((cart) => ({ ...cart, count: 1 }));

    return cartsWithCount;
  });

  const handleIncrement = (index) => {
    const updatedCarts = [...carts];
    updatedCarts[index].count = updatedCarts[index].count + 1;
    setTotalPrice(calculateTotalPrice(updatedCarts));
  };

  const handleDecrement = (index) => {
    const updatedCarts = [...carts];
    updatedCarts[index].count = Math.max(1, updatedCarts[index].count - 1);
    setTotalPrice(calculateTotalPrice(updatedCarts));
  };

  const calculateTotalPrice = (carts) => {
    return carts.reduce((acc, cart) => acc + cart.price * cart.count, 0);
  };

  const removeCart = (cart) => {
    const result = window.confirm('Are you sure you want to remove this item?');
    if (result) {
      // Perform removal logic here
      // You can update the state or make a server request to remove the item from the cart
      fetch('http://localhost:4000/deletecart',{
            method:'POST',
            headers:{
                  'content-type':'application/json'
            },
            body:JSON.stringify(cart)
      })
      .then(res=>res.json())
      .then(data=>{
            console.log(data)
            if(data.deletedCount>0){
                  toast.success('successfully removed from your cart ')
            }
      })
    }
  };

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (isError) {
    return <div>Error fetching data</div>;
  }

  return (
    <div className="ml-2 mr-2 p-2 md:max-w-7xl md:mx-auto">
      <div>
        <div className="overflow-x-auto">
          <div className="">
            <div className="mt-10 sm:ml-10 ml-1">
              {carts.map((cart, index) => (
                <div className="grid grid-flow-col items-center mb-10" key={cart._id}>
                  <div>
                    <div className="flex items-center gap-3">
                      <div className="avatar">
                        <div className="mask mask-squircle w-12 h-12">
                          <img
                            src={cart.strCategoryThumb}
                            alt="Avatar Tailwind CSS Component"
                          />
                        </div>
                      </div>
                      <div>
                        <div title={cart.strCategory} className="font-bold">{cart.strCategory.substring(0, 5)}</div>
                        <div className="text-sm opacity-50 md:hidden">
                          {cart.count}
                        </div>
                      </div>
                    </div>
                  </div>
                  <div className="">
                    <p>{cart.price * cart.count}</p>
                  </div>
                  <div className="hidden md:block"> {cart.count} </div>
                  <div>
                    <span
                      onClick={() => handleIncrement(index)}
                      className="btn btn-outline btn-info md:mr-2"
                    >
                      +
                    </span>
                    <span
                      onClick={() => handleDecrement(index)}
                      className="btn btn-outline btn-primary"
                    >
                      -
                    </span>
                  </div>
                  <div className="">
                    <button onClick={() => removeCart(cart)} className="btn btn-outline btn-info btn-md md:mr-5">
                      Remove
                    </button>
                    <button className="btn btn-outline btn-info btn-md ">
                      Pay Now
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
      <h1>Total Price: {totalPrice}</h1>
    </div>
  );
};

export default Cart;
